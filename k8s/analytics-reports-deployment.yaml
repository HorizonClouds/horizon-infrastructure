apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: >-
      C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
      -f ../docker-horizon/docker-compose-dev.yaml
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: analytics-reports
  name: analytics-reports
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: analytics-reports
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: >-
          C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert -f ../docker-horizon/docker-compose-dev.yaml
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: analytics-reports
    spec:
      containers:
        - env:
            - name: BACKEND_PORT
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_BACKEND_PORT
            - name: DEBUG
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_DEBUG
            - name: GATEWAY_URL
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_GATEWAY_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_JWT_SECRET
            - name: KAFKA_BROKER
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_KAFKA_BROKER
            - name: KAFKA_ENABLED
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_KAFKA_ENABLED
            - name: KAFKA_SERVICE_NAME
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_KAFKA_SERVICE_NAME
            - name: KAFKA_TOPIC
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_KAFKA_TOPIC
            - name: LOGLEVEL
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_LOGLEVEL
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_MONGODB_URI
            - name: NODE_ENV
              valueFrom:
                secretKeyRef:
                  name: horizon-secrets
                  key: analytics-secrets_NODE_ENV
          image: javifdez7/horizon-analytics-reports:develop
          name: horizon-analytics-reports
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            limits:
              memory: '419430400'
          volumeMounts:
            - mountPath: /opt/app/logs
              name: analytics-reports-claim0
          imagePullPolicy: Always
      restartPolicy: Always
      volumes:
        - name: analytics-reports-claim0
          persistentVolumeClaim:
            claimName: analytics-reports-claim0
