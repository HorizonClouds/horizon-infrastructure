version: '3.8'
services:
  #================ GENERAL SERVICES ===============#
  ################ API-GATEWAY ##############
  api-gateway:
    container_name: horizon-api-gateway
    image: javifdez7/horizon-api-gateway:develop
    environment:
      NODE_ENV: production
      PORT: 80
      THROTTLE_LIMIT: 10000 # Max requests
      THROTTLE_WINDOW: 15 # in minutes
      JWT_SECRET: horizon-secret
    ports:
      - '6900:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - logger
  ################### FRONTEND ################
  frontend:
    container_name: horizon-frontend
    image: javifdez7/horizon-frontend:develop
    environment:
      PORT: 80
      NODE_ENV: development
      REACT_APP_API_GATEWAY_URL: http://localhost:6900/api/v1 # This is the EXTERNAL URL (browser should be able to reach it)
      REACT_APP_BROWSER_ROOTER_URL: /api/v1/frontend
    ports:
      - '6902:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - api-gateway
  ################### ZOOKEEPER ################
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.4.13
    ports:
      - "2181:2181"
    mem_limit: 300m
    restart: unless-stopped
  ################### KAFKA ####################
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    mem_limit: 500m
    restart: unless-stopped
    depends_on:
      - zookeeper
  ################### LOGGER ###################
  logger:
    container_name: horizon-logger
    image: javifdez7/horizon-logger:develop
    environment:
      BACKEND_PORT: 80
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: logs
      LOG_FILE_PATH: src/logs/logfile.log
    volumes:
      - '../logs/logger:/opt/app/logs'
    ports:
      - '6901:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - kafka
  #============== SERVICES ==============# 
  ############## JAVIER Y MARTA #################
  ################### FEEDS ################### 
  feeds:
    container_name: horizon-feeds
    image: javifdez7/horizon-feeds:develop
    environment:
      NODE_ENV: development
      BACKEND_PORT: 80
      MONGODB_URI: mongodb://horizon-mongo-feeds:27017/microservice
      LOGLEVEL: INFO
      JWT_SECRET: horizon-secret
      KAFKA_ENABLED: 'true'
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: logs
      KAFKA_SERVICE_NAME: FEEDS
    volumes:
      - '../logs/feeds:/opt/app/logs'
    ports:
      - '6101:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - horizon-mongo-feeds
      - logger
      - api-gateway
  #########################################
  horizon-mongo-feeds:
    container_name: horizon-mongo-feeds
    image: mongo:6.0
    volumes:
      - horizon-mongo-feeds-volume:/data/db
    ports:
      - "6102:27017"
    mem_limit: 2000m
    restart: unless-stopped
  ################### CHATS ###################
  chats:
    container_name: horizon-chats
    image: javifdez7/horizon-chats:develop
    environment:
      NODE_ENV: development
      BACKEND_PORT: 80
      MONGODB_URI: mongodb://horizon-mongo-chats:27017/microservice
      LOGLEVEL: INFO
      JWT_SECRET: horizon-secret
      KAFKA_ENABLED: 'true'
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: logs
      KAFKA_SERVICE_NAME: CHATS
    volumes:
      - '../logs/chats:/opt/app/logs'
    ports:
      - '6103:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - horizon-mongo-chats
      - logger
      - api-gateway
  #########################################
  horizon-mongo-chats:
    container_name: horizon-mongo-chats
    image: mongo:6.0
    volumes:
      - horizon-mongo-chats-volume:/data/db
    ports:
      - "6104:27017"
    mem_limit: 2000m
    restart: unless-stopped
  ############## JOSE Y ALEX ###################
  ################### USERS ###################
  users:
    container_name: horizon-users
    image: javifdez7/horizon-users:develop
    environment:
      NODE_ENV: development
      BACKEND_PORT: 80
      MONGODB_URI: mongodb://horizon-mongo-users:27017/microservice
      DEBUG: 'true'
      LOGLEVEL: INFO
    volumes:
      - '../logs/users:/opt/app/logs'
    ports:
      - '6201:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - horizon-mongo-users
      - logger
      - api-gateway
  #########################################
  horizon-mongo-users:
    container_name: horizon-mongo-users
    image: mongo:6.0
    volumes:
      - horizon-mongo-users-volume:/data/db
    ports:
      - "6202:27017"
    mem_limit: 2000m
    restart: unless-stopped
  ############## ISMAEL Y JUAN #################
  ################### ANALYTICS-REPORTS ###################
  analytics-reports:
    container_name: horizon-analytics-reports
    image: javifdez7/horizon-analytics-reports:develop
    environment:
      NODE_ENV: development
      BACKEND_PORT: 80
      MONGODB_URI: mongodb://horizon-mongo-analytics-reports:27017/microservice
      DEBUG: 'true'
      LOGLEVEL: INFO
      KAFKA_ENABLED: 'true'
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: logs
      KAFKA_SERVICE_NAME: ANALYTICS
    volumes:
      - '../logs/analytics-reports:/opt/app/logs'
    ports:
      - '6301:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - horizon-mongo-analytics-reports
      - logger
      - api-gateway
  #########################################
  horizon-mongo-analytics-reports:
    container_name: horizon-mongo-analytics-reports
    image: mongo:6.0
    volumes:
      - horizon-mongo-analytics-reports-volume:/data/db
    ports:
      - "6302:27017"
    mem_limit: 2000m
    restart: unless-stopped

  ################### NOTIFICATIONS ###################
  notifications:
    container_name: horizon-notifications
    image: javifdez7/horizon-notifications:develop
    environment:
      NODE_ENV: development
      BACKEND_PORT: 80
      MONGODB_URI: mongodb://horizon-mongo-notifications:27017/microservice
      DEBUG: 'true'
      LOGLEVEL: INFO
      KAFKA_ENABLED: 'true'
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: logs
      KAFKA_SERVICE_NAME: NOTIFICATIONS
    volumes:
      - '../logs/notifications:/opt/app/logs'
    ports:
      - '6303:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - horizon-mongo-notifications
      - logger
      - api-gateway
  #########################################
  horizon-mongo-notifications:
    container_name: horizon-mongo-notifications
    image: mongo:6.0
    volumes:
      - horizon-mongo-notifications-volume:/data/db
    ports:
      - "6304:27017"
    mem_limit: 2000m
    restart: unless-stopped
  ############## CLAUDIA Y MANUEL ##############
  # have itineraries itineraries mongo , meteo and meteo redis
  itineraries:
    container_name: horizon-itineraries
    image: javifdez7/horizon-itineraries:develop
    environment:
      NODE_ENV: development
      BACKEND_PORT: 80
      MONGODB_URI: mongodb://horizon-mongo-itineraries:6402/itineraries
      KAFKA_ENABLED: 'true'
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: logs
      KAFKA_SERVICE_NAME: ITINERARY
      LOG_LEVEL: DEBUG
    ports:
      - '6401:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - horizon-mongo-itineraries
      - logger
      - api-gateway

  horizon-mongo-itineraries:
    container_name: horizon-mongo-itineraries
    image: mongo:6.0
    volumes:
      - horizon-mongo-itineraries-volume:/data/db
    ports:
      - "6402:27017"
    mem_limit: 2000m
    restart: unless-stopped

  meteo:
    container_name: horizon-meteo
    image: javifdez7/horizon-meteo:develop
    environment:
      NODE_ENV: development
      BACKEND_PORT: 80
      MAX_REQUESTS_PER_MINUTE: 10
      MIN_INTERVAL_BETWEEN_REQUESTS: 1000
      USE_MOCK_API: 'true'
      JWT_SECRET: meteo-secret
      ALLOWED_SERVICES: itineraries-service
      METEO_CIRCUIT_BREAKER_FAILURE_THRESHOLD: 5
      METEO_CIRCUIT_BREAKER_SUCCESS_THRESHOLD: 3
      METEO_CIRCUIT_BREAKER_RESET_TIMEOUT: 15000
      REDIS_HOST: horizon-redis-meteo
      REDIS_PORT: 6379 # Internal
      REDIS_TTL: 86400
      KAFKA_ENABLED: 'true'
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: logs
      KAFKA_SERVICE_NAME: METEO
      LOGLEVEL: DEBUG
    ports:
      - '6403:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - horizon-redis-meteo
      - logger
      - api-gateway

  horizon-redis-meteo:
    container_name: horizon-redis-meteo
    image: redis:6.0
    ports:
      - "6404:6379"
    volumes:
      - horizon-redis-meteo-volume:/data
    mem_limit: 2000m
    restart: unless-stopped
  ############## LUIS Y ANTONO #################


  #============== VOLUMES ==============# 
volumes:
  horizon-mongo-users-volume:
  horizon-mongo-feeds-volume:
  horizon-mongo-chats-volume:
  horizon-mongo-itineraries-volume:
  horizon-redis-meteo-volume:
  horizon-mongo-analytics-reports-volume:
  horizon-mongo-notifications-volume: 
        #============== NETWORKS ==============# 
