version: '3.8'
services:
  api-gateway:
    container_name: horizon-api-gateway
    image: javifdez7/horizon-api-gateway:develop
    environment:
      NODE_ENV: production
      PORT: 80
      THROTTLE_LIMIT: 10000
      THROTTLE_WINDOW: 15
      JWT_SECRET: horizon-secret
    ports:
      - '6900:80'
    mem_limit: 400m
    restart: unless-stopped

  feeds:
    container_name: horizon-feeds
    image: javifdez7/horizon-feeds:develop
    environment:
      NODE_ENV: production
      BACKEND_PORT: 80
      MONGODB_URI: mongodb://horizon-mongo-feeds:27017/feeds
      LOGLEVEL: DEBUG
      INFRASTRUCTURE_INTEGRATION: 'true'
      JWT_SECRET: horizon-secret
      KAFKA_ENABLED: 'false'
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: logs
      KAFKA_SERVICE_NAME: FEEDS
      GATEWAY_URL: http://api-gateway:80
      REDIS_CACHE_ENABLED: 'true'
      REDIS_HOST: horizon-redis-feeds
      REDIS_PORT: 6379 # Internal
      REDIS_TTL: 10
      THROTTLE_WINDOW_MS: 10000
      THROTTLE_MAX: 100
      RL_MAX_REQUESTS_PER_MINUTE: 100
      RL_MIN_INTERVAL_BETWEEN_REQUESTS: 0
      CBREAKER_FAILURE_THRESHOLD: 5
      CBREAKER_SUCCESS_THRESHOLD: 3
      CBREAKER_RESET_TIMEOUT: 30000
    ports:
      - '6101:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - api-gateway
      - horizon-redis-feeds

  horizon-redis-feeds:
    container_name: horizon-redis-feeds
    image: redis:6.0
    ports:
      - "6105:6379"
    volumes:
      - horizon-redis-feeds-volume:/data
    mem_limit: 2000m
    restart: unless-stopped

  itineraries:
    container_name: horizon-itineraries
    image: javifdez7/horizon-itineraries:develop
    environment:
      NODE_ENV: production
      BACKEND_PORT: 80
      MONGODB_URI: mongodb://horizon-mongo-itineraries:6402/itineraries
      KAFKA_ENABLED: 'false'
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: logs
      KAFKA_SERVICE_NAME: ITINERARY
      LOGLEVEL: DEBUG
      GATEWAY_URL: http://horizon-api-gateway:80
    ports:
      - '6401:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - api-gateway

  meteo:
    container_name: horizon-meteo
    image: javifdez7/horizon-meteo:develop
    environment:
      NODE_ENV: production
      BACKEND_PORT: 80
      MAX_REQUESTS_PER_MINUTE: 10
      MIN_INTERVAL_BETWEEN_REQUESTS: 1000
      USE_MOCK_API: "true"
      JWT_SECRET: horizon-secret
      ALLOWED_SERVICES: itineraries-service
      METEO_CIRCUIT_BREAKER_FAILURE_THRESHOLD: 5
      METEO_CIRCUIT_BREAKER_SUCCESS_THRESHOLD: 3
      METEO_CIRCUIT_BREAKER_RESET_TIMEOUT: 15000
      REDIS_HOST: horizon-redis-meteo
      REDIS_PORT: 6379
      REDIS_TTL: 86400
      KAFKA_ENABLED: truent
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: logs
      KAFKA_SERVICE_NAME: METEO
      LOGLEVEL: DEBUG
    ports:
      - '6403:80'
    mem_limit: 400m
    restart: unless-stopped
    depends_on:
      - api-gateway
      - horizon-redis-meteo

  horizon-redis-meteo:
    container_name: horizon-redis-meteo
    image: redis:6.0
    ports:
      - "6404:6379"
    volumes:
      - horizon-redis-meteo-volume:/data
    mem_limit: 2000m
    restart: unless-stopped
    depends_on:
      - api-gateway
volumes:
  horizon-redis-meteo-volume:
  horizon-redis-feeds-volume:
